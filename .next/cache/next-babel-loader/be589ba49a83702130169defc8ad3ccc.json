{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jess\\xE9\\\\Documents\\\\pi\\\\PI2Blog\\\\components\\\\Link.jsx\";\nvar __jsx = React.createElement;\nimport React, { forwardRef } from 'react';\nimport { useRouter } from 'next/router';\nimport clsx from 'clsx';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nimport PropTypes from 'prop-types';\nvar NextComposed = forwardRef(function NextComposed(props, ref) {\n  var href = props.href,\n      as = props.as,\n      prefetch = props.prefetch,\n      other = _objectWithoutProperties(props, [\"href\", \"as\", \"prefetch\"]);\n\n  return __jsx(NextLink, {\n    href: href,\n    as: as,\n    prefetch: prefetch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", _extends({\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })));\n});\nNextComposed.propTypes = {\n  as: PropTypes.string,\n  prefetch: PropTypes.func,\n  props: PropTypes.object,\n  href: PropTypes.string\n};\n\nvar Link = function Link(_ref) {\n  var href = _ref.href,\n      classNameProps = _ref.className,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? 'active' : _ref$activeClassName,\n      other = _objectWithoutProperties(_ref, [\"href\", \"className\", \"activeClassName\"]);\n\n  var router = useRouter();\n  var pathname = typeof href == 'string' ? href : href.pa;\n};","map":{"version":3,"sources":["C:/Users/Jess√©/Documents/pi/PI2Blog/components/Link.jsx"],"names":["React","forwardRef","useRouter","clsx","NextLink","MuiLink","PropTypes","NextComposed","props","ref","href","as","prefetch","other","propTypes","string","func","object","Link","classNameProps","className","activeClassName","router","pathname","pa"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,YAAY,GAAGN,UAAU,CAC3B,SAASM,YAAT,CAAsBC,KAAtB,EAA6BC,GAA7B,EAAiC;AAAA,MAEzBC,IAFyB,GAGzBF,KAHyB,CAEzBE,IAFyB;AAAA,MAEnBC,EAFmB,GAGzBH,KAHyB,CAEnBG,EAFmB;AAAA,MAEfC,QAFe,GAGzBJ,KAHyB,CAEfI,QAFe;AAAA,MAEFC,KAFE,4BAGzBL,KAHyB;;AAI7B,SACI,MAAC,QAAD;AACA,IAAA,IAAI,EAAEE,IADN;AAEA,IAAA,EAAE,EAAEC,EAFJ;AAGA,IAAA,QAAQ,EAAEC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAG,IAAA,GAAG,EAAEH;AAAR,KAAiBI,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJJ,CADJ;AAQH,CAb0B,CAA/B;AAgBAN,YAAY,CAACO,SAAb,GAAuB;AACnBH,EAAAA,EAAE,EAAEL,SAAS,CAACS,MADK;AAEnBH,EAAAA,QAAQ,EAAEN,SAAS,CAACU,IAFD;AAGnBR,EAAAA,KAAK,EAAEF,SAAS,CAACW,MAHE;AAInBP,EAAAA,IAAI,EAAEJ,SAAS,CAACS;AAJG,CAAvB;;AAOA,IAAMG,IAAI,GAAG,SAAPA,IAAO,OAOR;AAAA,MALGR,IAKH,QALGA,IAKH;AAAA,MAJcS,cAId,QAJGC,SAIH;AAAA,kCAHGC,eAGH;AAAA,MAHGA,eAGH,qCAHqB,QAGrB;AAAA,MAFMR,KAEN;;AACD,MAAMS,MAAM,GAAGpB,SAAS,EAAxB;AACA,MAAMqB,QAAQ,GAAG,OAAOb,IAAP,IAAe,QAAf,GAA0BA,IAA1B,GAAiCA,IAAI,CAACc,EAAvD;AACH,CAVD","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport clsx from 'clsx';\r\nimport NextLink from 'next/link';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NextComposed = forwardRef(\r\n    function NextComposed(props, ref){\r\n        const {\r\n            href, as, prefetch, ...other\r\n        } = props;\r\n        return (\r\n            <NextLink \r\n            href={href}\r\n            as={as}\r\n            prefetch={prefetch}>\r\n                <a ref={ref} {...other} />\r\n            </NextLink>\r\n        );\r\n    }\r\n);\r\n\r\nNextComposed.propTypes={\r\n    as: PropTypes.string,\r\n    prefetch: PropTypes.func,\r\n    props: PropTypes.object,\r\n    href: PropTypes.string,\r\n}\r\n\r\nconst Link = (\r\n    {\r\n        href,\r\n        className: classNameProps,\r\n        activeClassName = 'active',\r\n        ...other\r\n    }\r\n) => {\r\n    const router = useRouter();\r\n    const pathname = typeof href == 'string' ? href : href.pa\r\n}"]},"metadata":{},"sourceType":"module"}