{"ast":null,"code":"var _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar META = /export\\s+const\\s+meta\\s+=\\s+(\\{(\\n|.)*?\\n\\})/;\nvar DIR = path.join(process.cwd(), './pages/postagens/');\nvar files = fs.readFileSync(DIR).filter(function (file) {\n  return file.endsWith('.md');\n});\nmodule.exports = files.map(function (file) {\n  var name = path.join(DIR, file);\n  var contents = fs.readFileSync(name, 'utf8');\n  var match = META.exec(contents);\n  if (!match || typeof match[1] !== 'string') throw new Error(\"\".concat(name, \" needs to export const meta = {}\"));\n  var meta = eva1('(' + match[1] + ')');\n  return _objectSpread({}, meta, {\n    path: '/postagens/' + file.replace(/\\.mdx?$/, '')\n  });\n}).filter(function (meta) {\n  return meta.published;\n}).sort(function (a, b) {\n  return new Date(b.publishedAt) - new Date(a.publishedAt);\n}); //Essa função busca na pasta /pages/blog/ qualquer arquivo com extensão .md\n// e dentro de cada arquivo, espera um objeto chamado meta, onde residem as propriedades da postagem\n// (o titulo, caminho, resumo e data da publicação), e a função final exporta isso","map":{"version":3,"sources":["C:/Users/Jessé/Documents/pi/PI2Blog/data/get-postagens.js"],"names":["fs","require","path","META","DIR","join","process","cwd","files","readFileSync","filter","file","endsWith","module","exports","map","name","contents","match","exec","Error","meta","eva1","replace","published","sort","a","b","Date","publishedAt"],"mappings":";;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAME,IAAI,GAAG,8CAAb;AAEA,IAAMC,GAAG,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,oBAAzB,CAAZ;AAEA,IAAMC,KAAK,GAAGR,EAAE,CAACS,YAAH,CAAgBL,GAAhB,EAAqBM,MAArB,CAA4B,UAACC,IAAD;AAAA,SAAUA,IAAI,CAACC,QAAL,CAAc,KAAd,CAAV;AAAA,CAA5B,CAAd;AAEAC,MAAM,CAACC,OAAP,GAAiBN,KAAK,CAACO,GAAN,CAAU,UAAAJ,IAAI,EAAI;AAC/B,MAAMK,IAAI,GAACd,IAAI,CAACG,IAAL,CAAUD,GAAV,EAAeO,IAAf,CAAX;AACA,MAAMM,QAAQ,GAACjB,EAAE,CAACS,YAAH,CAAgBO,IAAhB,EAAsB,MAAtB,CAAf;AACA,MAAME,KAAK,GAACf,IAAI,CAACgB,IAAL,CAAUF,QAAV,CAAZ;AAEA,MAAG,CAACC,KAAD,IAAU,OAAOA,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAAjC,EACI,MAAM,IAAIE,KAAJ,WAAaJ,IAAb,sCAAN;AAEJ,MAAMK,IAAI,GAAGC,IAAI,CAAC,MAAMJ,KAAK,CAAC,CAAD,CAAX,GAAiB,GAAlB,CAAjB;AAEA,2BACOG,IADP;AAEInB,IAAAA,IAAI,EAAE,gBAAgBS,IAAI,CAACY,OAAL,CAAa,SAAb,EAAuB,EAAvB;AAF1B;AAIH,CAdgB,EAcdb,MAdc,CAeb,UAACW,IAAD;AAAA,SAAUA,IAAI,CAACG,SAAf;AAAA,CAfa,EAgBfC,IAhBe,CAiBb,UAACC,CAAD,EAAGC,CAAH;AAAA,SAAS,IAAIC,IAAJ,CAASD,CAAC,CAACE,WAAX,IAA0B,IAAID,IAAJ,CAASF,CAAC,CAACG,WAAX,CAAnC;AAAA,CAjBa,CAAjB,C,CAoBA;AACA;AACA","sourcesContent":["const fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst META = /export\\s+const\\s+meta\\s+=\\s+(\\{(\\n|.)*?\\n\\})/;\r\n\r\nconst DIR = path.join(process.cwd(), './pages/postagens/');\r\n\r\nconst files = fs.readFileSync(DIR).filter((file) => file.endsWith('.md'))\r\n\r\nmodule.exports = files.map(file => {\r\n    const name=path.join(DIR, file);\r\n    const contents=fs.readFileSync(name, 'utf8');\r\n    const match=META.exec(contents);\r\n\r\n    if(!match || typeof match[1] !== 'string')\r\n        throw new Error(`${name} needs to export const meta = {}`);\r\n    \r\n    const meta = eva1('(' + match[1] + ')');\r\n\r\n    return {\r\n        ...meta,\r\n        path: '/postagens/' + file.replace(/\\.mdx?$/,'')\r\n    }\r\n}).filter(\r\n    (meta) => meta.published\r\n).sort(\r\n    (a,b) => new Date(b.publishedAt) - new Date(a.publishedAt)\r\n    );\r\n\r\n//Essa função busca na pasta /pages/blog/ qualquer arquivo com extensão .md\r\n// e dentro de cada arquivo, espera um objeto chamado meta, onde residem as propriedades da postagem\r\n// (o titulo, caminho, resumo e data da publicação), e a função final exporta isso    "]},"metadata":{},"sourceType":"script"}